name: 'Prepare Deployment Bundle'

on:
  workflow_call:
    inputs:
      new_version:
        description: 'The target version for this bundle, based on what is currently deployed on the BOINC server'
        type: string
        required: true
      platform:
        description: 'User friendly platform name used to distinctly name artifacts across platforms'
        type: string
        required: true
      boinc_platform:
        description: 'Must match one of the platforms in the BOINC server project.xml and https://boinc.berkeley.edu/trac/wiki/BoincPlatforms'
        type: string
        required: true
      wrapper:
        description: 'Name of the wrapper to use - these get updated every so often and can be found here https://boinc.berkeley.edu/dl/?C=M;O=D'
        type: string
        required: true
      extension:
        description: 'Lazy way to make sure that Windows executables are referenced with the .exe bit'
        type: string
        required: true

jobs:
  bundle:
    env:
      NEW_VERSION: ${{ inputs.new_version }}
      PLATFORM: ${{ inputs.platform }}
      BOINC_PLATFORM: ${{ inputs.boinc_platform }}
      WRAPPER: ${{ inputs.wrapper }}
      EXTENSION: ${{ inputs.extension }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout repository"
      # https://github.com/actions/checkout
      uses: actions/checkout@v4
    - name: "Download BOINC wrapper"
      # wrapper documentation is outdated, latest wrapper version can be found here https://boinc.berkeley.edu/dl/?C=M;O=D
      run: |
        curl -O https://boinc.berkeley.edu/dl/$WRAPPER.zip
    - name: "Unzip wrapper"
      run: | 
        unzip $WRAPPER.zip
        if [[ -d "$WRAPPER" ]]; then
          mv $WRAPPER/* .
        fi
    - name: "Create job.xml"
      run: |
        sed -e "s/{{EXECUTABLE}}/$EXECUTABLE$EXTENSION/g" boinc/job_template.xml > job.$NEW_VERSION-$PLATFORM.xml
    - name: "Create version.xml"
      run: |
        sed -e "s/{{WRAPPER}}/$WRAPPER$EXTENSION/g" -e "s/{{VERSION}}/$NEW_VERSION/g" -e "s/{{PLATFORM}}/$PLATFORM/g" boinc/version_template.xml > version.xml
    - name: "Create directory for previously created binaries"
      run: |
        mkdir app.$NEW_VERSION-$PLATFORM
    - name: "Download previously compiled binaries"
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.PLATFORM }}
        path: app.${{ env.NEW_VERSION }}-${{ env.PLATFORM }}
    - name: "Zip build output"
      run: |
        zip -r app.$NEW_VERSION-$PLATFORM.zip app.$NEW_VERSION-$PLATFORM
    - name: "Sign files"
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      run: |
        echo "$SIGNING_KEY" > key
        ./boinc/sign_executable job.$NEW_VERSION-$PLATFORM.xml key > job.$NEW_VERSION-$PLATFORM.xml.sig
        ./boinc/sign_executable app.$NEW_VERSION-$PLATFORM.zip key > app.$NEW_VERSION-$PLATFORM.zip.sig
        ./boinc/sign_executable $WRAPPER$EXTENSION key > $WRAPPER$EXTENSION.sig
    - name: "Create app bundle"
      run: |
        zip -r --junk-paths $BOINC_PLATFORM.zip . -i version.xml job.$NEW_VERSION-$PLATFORM.xml job.$NEW_VERSION-$PLATFORM.xml.sig $WRAPPER$EXTENSION $WRAPPER$EXTENSION.sig app.$NEW_VERSION-$PLATFORM.zip app.$NEW_VERSION-$PLATFORM.zip.sig
    - name: "Upload binary to GitHub"
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.BOINC_PLATFORM }}.zip
          path: ${{ env.BOINC_PLATFORM }}.zip
          overwrite: true