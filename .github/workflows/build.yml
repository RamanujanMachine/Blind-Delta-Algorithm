name: 'Build Python into Cross Platform Executable'

on:
  push

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  define-version:
    uses: ./.github/workflows/identify_target_version.yml
    with:
      # we use the description to fetch the latest version of the app from the BOINC server apps page
      boinc_app_description: 'blind delta algorithm'

  build-binaries:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - runner: ubuntu-latest
            # we use this platform string to make our download artifacts unique for the same version across platforms
            platform: 'linux'
          - runner: windows-latest
            # we use this platform string to make our download artifacts unique for the same version across platforms
            platform: 'win'
          - runner: macos-latest
            # we use this platform string to make our download artifacts unique for the same version across platforms
            platform: 'mac'
    steps:
      - name: "Checkout repository"
        # https://github.com/actions/checkout
        uses: actions/checkout@v4
      - name: "Configure python"
        # https://github.com/actions/setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"
      - name: "Install dependencies and cx-Freeze"
        run: |
            pip install -e .
            pip install --upgrade cx_Freeze
      - name: "Build binary"
        run: | # See https://cx-freeze.readthedocs.io/en/stable/script.html#script
           python generated_boinc_setup.py build
      - name: "Upload cxFreeze binaries"
        uses: actions/upload-artifact@v4
        with:
            name: ${{ matrix.platform }}
            path: build/executable
            overwrite: true

  bundle:
    needs: [define-version, build-binaries]
    uses: ./.github/workflows/bundle_app.yml
    secrets: inherit
    with:
      new_version: ${{ needs.define-version.outputs.new_version }}
      platform: ${{ matrix.platform }}
      wrapper: ${{ matrix.wrapper }}
      boinc_platform: ${{ matrix.boinc_platform }}
    strategy:
      matrix:
        platform:
          - linux
          - mac
          - win
        include:
        - platform: 'linux'
          wrapper: 'wrapper_26002_x86_64-pc-linux-gnu'
          boinc_platform: 'x86_64-pc-linux-gnu'
        - platform: 'win'
          wrapper: 'wrapper_26016_windows_x86_64'
          boinc_platform: 'windows_x86_64'
        - platform: 'mac'
          wrapper: 'wrapper_26017_universal-apple-darwin'
          boinc_platform: 'arm64-apple-darwin'

#  deploy:
#    needs: [bundle]
#    runs-on: ubuntu-latest
#    steps:
#      - name: "Copy files to server"
#        run: |
#          scp
#      - name: "Invoke deploy script"
#        run: |
